* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background: #f5f5f5;
  min-height: 100vh;
  overflow-x: hidden;
  margin: 0;
  padding: 20px;
}

@keyframes gradientShift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

.app {
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 20px;
  position: relative;
}

.app::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="75" cy="75" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="50" cy="10" r="0.5" fill="rgba(255,255,255,0.05)"/><circle cx="10" cy="60" r="0.5" fill="rgba(255,255,255,0.05)"/><circle cx="90" cy="40" r="0.5" fill="rgba(255,255,255,0.05)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
  opacity: 0.3;
  pointer-events: none;
  animation: float 20s ease-in-out infinite;
}

@keyframes float {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  50% { transform: translateY(-20px) rotate(1deg); }
}

.container {
  background: #222222;
  border-radius: 15px;
  box-shadow: 
    0 10px 30px rgba(0, 0, 0, 0.3),
    0 0 0 1px #4a90e2;
  padding: 30px;
  width: 100%;
  max-width: 500px;
  min-height: 400px;
  position: relative;
  margin: 0 auto;
  border: 2px solid #4a90e2;
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(50px) scale(0.9);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

h1 {
  text-align: center;
  color: white;
  margin-bottom: 30px;
  font-size: 2.5rem;
  font-weight: bold;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

@keyframes gradientText {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

h1::after {
  content: 'âœ¨';
  position: absolute;
  top: -10px;
  right: -20px;
  font-size: 1.5rem;
  animation: sparkle 2s ease-in-out infinite;
}

@keyframes sparkle {
  0%, 100% { transform: scale(1) rotate(0deg); opacity: 1; }
  50% { transform: scale(1.2) rotate(180deg); opacity: 0.8; }
}

.input-section {
  display: flex;
  gap: 10px;
  margin-bottom: 30px;
}

@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.task-input {
  flex: 1;
  padding: 12px 15px;
  border: 1px solid #ccc;
  border-radius: 8px;
  font-size: 16px;
  outline: none;
  background: white;
  transition: border-color 0.3s ease;
}

.task-input:focus {
  border-color: #4a90e2;
  box-shadow: 0 0 0 2px rgba(74, 144, 226, 0.2);
}

.task-input::placeholder {
  color: #999;
  transition: all 0.3s ease;
}

.task-input:focus::placeholder {
  transform: translateY(-2px);
  opacity: 0.7;
}

.add-button {
  padding: 12px 20px;
  background: #4a90e2;
  color: white;
  border: none;
  border-radius: 8px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: background-color 0.3s ease;
  white-space: nowrap;
}

.add-button:hover {
  background: #357abd;
}

.add-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  transition: left 0.6s ease;
}

.add-button:hover::before {
  left: 100%;
}

.add-button:hover {
  transform: translateY(-3px) scale(1.05);
  box-shadow: 
    0 15px 35px rgba(255, 107, 107, 0.4),
    0 0 0 1px rgba(255, 255, 255, 0.2);
}

.add-button:active {
  transform: translateY(-1px) scale(1.02);
  transition: all 0.1s ease;
}

.add-button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.add-button.adding {
  animation: pulse 1s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.05); }
}

.tasks-section {
  margin-bottom: 20px;
}

.task-list-title {
  text-align: center;
  color: white;
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: 20px;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.no-tasks {
  text-align: center;
  color: #ccc;
  font-style: italic;
  padding: 40px 0;
  font-size: 16px;
}

@keyframes pulse {
  0%, 100% { opacity: 0.7; }
  50% { opacity: 1; }
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
  40% { transform: translateY(-10px); }
  60% { transform: translateY(-5px); }
}

.task-list {
  list-style: none;
  animation: fadeInUp 0.6s ease-out;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.task-item {
  display: flex;
  align-items: center;
  gap: 15px;
  padding: 15px;
  margin-bottom: 10px;
  background: #f0f0f0;
  border-radius: 8px;
  transition: all 0.3s ease;
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.task-item::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 107, 107, 0.1), transparent);
  transition: left 0.6s ease;
}

.task-item:hover::before {
  left: 100%;
}

.task-item:hover {
  background: linear-gradient(135deg, #ffe8e8 0%, #f8f9fa 100%);
  transform: translateX(8px) translateY(-2px);
  box-shadow: 
    0 8px 25px rgba(255, 107, 107, 0.15),
    0 0 0 1px rgba(255, 107, 107, 0.1);
  border-left-color: #ff6b6b;
}

.task-item.completed {
  background: linear-gradient(135deg, #d1f2eb 0%, #a8e6cf 100%);
  border-left-color: #4ecdc4;
  opacity: 0.8;
  animation: completeTask 0.6s ease-out;
}

@keyframes completeTask {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

.task-checkbox {
  width: 18px;
  height: 18px;
  cursor: pointer;
  accent-color: #4a90e2;
}

.task-text {
  flex: 1;
  font-size: 16px;
  color: #333;
  font-weight: 500;
}

.task-text.completed {
  text-decoration: line-through;
  color: #999;
}

.edit-input {
  flex: 1;
  padding: 8px 12px;
  border: 1px solid #4a90e2;
  border-radius: 4px;
  font-size: 16px;
  outline: none;
  background: white;
}

.task-actions {
  display: flex;
  gap: 10px;
}

.edit-button {
  background: none;
  border: none;
  color: #ff6b6b;
  cursor: pointer;
  font-size: 14px;
  font-weight: 500;
  padding: 5px 10px;
  transition: color 0.3s ease;
}

.edit-button:hover {
  color: #ff5252;
}

.delete-button {
  background: none;
  border: none;
  color: #ff6b6b;
  cursor: pointer;
  font-size: 14px;
  font-weight: 500;
  padding: 5px 10px;
  transition: color 0.3s ease;
}

.delete-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  transition: left 0.4s ease;
}

.delete-button:hover::before {
  left: 100%;
}

.delete-button:hover {
  color: #ff5252;
}

.delete-button:active {
  transform: translateY(0) scale(0.98);
  transition: all 0.1s ease;
}

.delete-button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.task-item.deleting {
  animation: slideOutRight 0.3s ease-in-out forwards;
  opacity: 0;
}

@keyframes slideOutRight {
  from {
    opacity: 1;
    transform: translateX(0) scale(1);
  }
  to {
    opacity: 0;
    transform: translateX(100px) scale(0.8);
  }
}

.stats {
  text-align: center;
  padding: 20px 0;
  margin-top: 20px;
}

.stats-divider {
  width: 100%;
  height: 2px;
  background: #4a90e2;
  margin-bottom: 15px;
}

.stats::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 107, 107, 0.1), transparent);
  animation: shimmer 3s ease-in-out infinite;
}

@keyframes shimmer {
  0% { left: -100%; }
  50% { left: 100%; }
  100% { left: 100%; }
}

.stats p {
  color: white;
  font-size: 16px;
  font-weight: 600;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

/* Loading animation for new tasks */
@keyframes taskSlideIn {
  from {
    opacity: 0;
    transform: translateX(-50px) scale(0.9);
  }
  to {
    opacity: 1;
    transform: translateX(0) scale(1);
  }
}

.task-item.new-task {
  animation: taskSlideIn 0.5s ease-out;
}

/* Pulse animation for empty state */
@keyframes emptyStatePulse {
  0%, 100% { 
    transform: scale(1);
    opacity: 0.8;
  }
  50% { 
    transform: scale(1.02);
    opacity: 1;
  }
}

.no-tasks {
  animation: emptyStatePulse 3s ease-in-out infinite;
}

/* Enhanced focus states */
.task-input:focus,
.add-button:focus,
.delete-button:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(255, 107, 107, 0.3);
}

/* Smooth transitions for all interactive elements */
* {
  transition: box-shadow 0.3s ease;
}

/* Custom scrollbar for task list */
.task-list {
  max-height: 400px;
  overflow-y: auto;
  padding-right: 5px;
}

.task-list::-webkit-scrollbar {
  width: 6px;
}

.task-list::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.1);
  border-radius: 3px;
}

.task-list::-webkit-scrollbar-thumb {
  background: linear-gradient(135deg, #ff6b6b, #4ecdc4);
  border-radius: 3px;
}

.task-list::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(135deg, #ff5252, #26a69a);
}

/* Responsive design */
@media (max-width: 768px) {
  .container {
    padding: 30px 20px;
    margin: 10px;
    border-radius: 25px;
  }
  
  h1 {
    font-size: 2.5rem;
  }
  
  h1::after {
    right: -15px;
    top: -5px;
  }
  
  .input-section {
    flex-direction: column;
    gap: 15px;
  }
  
  .task-input {
    padding: 18px 22px;
  }
  
  .add-button {
    padding: 18px 30px;
    align-self: stretch;
  }
  
  .task-item {
    flex-direction: column;
    align-items: flex-start;
    gap: 15px;
    padding: 20px;
  }
  
  .delete-button {
    margin-left: 0;
    align-self: flex-end;
    padding: 12px 24px;
  }
  
  .task-item.completed .task-text::after {
    right: -25px;
  }
}

@media (max-width: 480px) {
  .container {
    padding: 20px 15px;
    margin: 5px;
  }
  
  h1 {
    font-size: 2rem;
  }
  
  .task-input {
    padding: 15px 18px;
    font-size: 14px;
  }
  
  .add-button {
    padding: 15px 25px;
    font-size: 14px;
  }
  
  .task-text {
    font-size: 14px;
  }
  
  .delete-button {
    padding: 10px 20px;
    font-size: 12px;
  }
}
